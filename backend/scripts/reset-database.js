const { DataSource } = require('typeorm');
require('dotenv').config();

// Configuration pour se connecter √† MySQL sans base de donn√©es sp√©cifique
const adminDataSource = new DataSource({
    type: 'mysql',
    host: process.env.DATABASE_HOST || 'localhost',
    port: parseInt(process.env.DATABASE_PORT) || 3306,
    username: process.env.DATABASE_USERNAME || 'root',
    password: process.env.DATABASE_PASSWORD || '',
    // Pas de database pour pouvoir la cr√©er/supprimer
});

// Configuration pour la base de donn√©es sp√©cifique
const appDataSource = new DataSource({
    type: 'mysql',
    host: process.env.DATABASE_HOST || 'localhost',
    port: parseInt(process.env.DATABASE_PORT) || 3306,
    username: process.env.DATABASE_USERNAME || 'root',
    password: process.env.DATABASE_PASSWORD || '',
    database: process.env.DATABASE_NAME || 'u527740812_site_info_db',
    entities: ['../src/**/*.entity.ts'],
    synchronize: true, // ATTENTION: Cela va recr√©er les tables
    dropSchema: true, // ATTENTION: Cela va supprimer toutes les tables
});

async function resetDatabase() {
    try {
        console.log('üîÑ Connexion √† MySQL...');
        await adminDataSource.initialize();

        const dbName = process.env.DATABASE_NAME || 'u527740812_site_info_db';

        console.log('üóëÔ∏è Suppression de la base de donn√©es...');
        await adminDataSource.query(`DROP DATABASE IF EXISTS ${dbName}`);

        console.log('üèóÔ∏è Cr√©ation de la base de donn√©es...');
        await adminDataSource.query(`CREATE DATABASE ${dbName} CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci`);

        await adminDataSource.destroy();

        console.log('üîÑ Connexion √† la nouvelle base de donn√©es...');
        await appDataSource.initialize();

        console.log('‚úÖ Base de donn√©es reset avec succ√®s !');
        console.log('üìä TypeORM va maintenant cr√©er les tables...');

        await appDataSource.destroy();
        console.log('üéâ Termin√© ! La base de donn√©es est pr√™te.');

    } catch (error) {
        console.error('‚ùå Erreur lors du reset de la base de donn√©es:', error.message);
        process.exit(1);
    }
}

resetDatabase();